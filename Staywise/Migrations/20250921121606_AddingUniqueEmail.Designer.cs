// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Staywise.Data;

#nullable disable

namespace Staywise.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921121606_AddingUniqueEmail")]
    partial class AddingUniqueEmail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Staywise.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ListingId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("ListingId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Staywise.Models.Listing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<List<string>>("Amenities")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("BathRooms")
                        .HasColumnType("integer");

                    b.Property<int>("BedRooms")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uuid");

                    b.Property<int>("MaxGuests")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("Photos")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("Staywise.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ListingId")
                        .HasColumnType("uuid");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookingId");

                    b.HasIndex("ListingId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Staywise.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Staywise.Models.Booking", b =>
                {
                    b.HasOne("Staywise.Models.User", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Staywise.Models.Listing", "Listing")
                        .WithMany()
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("Staywise.Models.Listing", b =>
                {
                    b.HasOne("Staywise.Models.User", "Host")
                        .WithMany()
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Staywise.Models.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ListingId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Line2")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("PostalCode")
                                .HasColumnType("integer");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ListingId");

                            b1.ToTable("Listings");

                            b1.WithOwner()
                                .HasForeignKey("ListingId");

                            b1.OwnsOne("Staywise.Models.Location", "Location", b2 =>
                                {
                                    b2.Property<Guid>("AddressListingId")
                                        .HasColumnType("uuid");

                                    b2.PrimitiveCollection<double[]>("Coordinates")
                                        .IsRequired()
                                        .HasColumnType("double precision[]");

                                    b2.Property<string>("Type")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("AddressListingId");

                                    b2.ToTable("Listings");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressListingId");
                                });

                            b1.Navigation("Location")
                                .IsRequired();
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Host");
                });

            modelBuilder.Entity("Staywise.Models.Review", b =>
                {
                    b.HasOne("Staywise.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Staywise.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Staywise.Models.Listing", "Listing")
                        .WithMany()
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Booking");

                    b.Navigation("Listing");
                });
#pragma warning restore 612, 618
        }
    }
}
